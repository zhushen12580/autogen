"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1041],{26946:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(85893),i=t(11151);const s={sidebar_label:"math_user_proxy_agent",title:"agentchat.contrib.math_user_proxy_agent"},a=void 0,o={id:"reference/agentchat/contrib/math_user_proxy_agent",title:"agentchat.contrib.math_user_proxy_agent",description:"MathUserProxyAgent",source:"@site/docs/reference/agentchat/contrib/math_user_proxy_agent.md",sourceDirName:"reference/agentchat/contrib",slug:"/reference/agentchat/contrib/math_user_proxy_agent",permalink:"/autogen/docs/reference/agentchat/contrib/math_user_proxy_agent",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/agentchat/contrib/math_user_proxy_agent.md",tags:[],version:"current",frontMatter:{sidebar_label:"math_user_proxy_agent",title:"agentchat.contrib.math_user_proxy_agent"},sidebar:"referenceSideBar",previous:{title:"llava_agent",permalink:"/autogen/docs/reference/agentchat/contrib/llava_agent"},next:{title:"multimodal_conversable_agent",permalink:"/autogen/docs/reference/agentchat/contrib/multimodal_conversable_agent"}},l={},c=[{value:"MathUserProxyAgent",id:"mathuserproxyagent",level:2},{value:"MAX_CONSECUTIVE_AUTO_REPLY",id:"max_consecutive_auto_reply",level:4},{value:"__init__",id:"__init__",level:3},{value:"message_generator",id:"message_generator",level:3},{value:"execute_one_python_code",id:"execute_one_python_code",level:3},{value:"execute_one_wolfram_query",id:"execute_one_wolfram_query",level:3},{value:"get_from_dict_or_env",id:"get_from_dict_or_env",level:3},{value:"WolframAlphaAPIWrapper",id:"wolframalphaapiwrapper",level:2},{value:"wolfram_client",id:"wolfram_client",level:4},{value:"Config",id:"config",level:2},{value:"validate_environment",id:"validate_environment",level:3},{value:"run",id:"run",level:3}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"mathuserproxyagent",children:"MathUserProxyAgent"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class MathUserProxyAgent(UserProxyAgent)\n"})}),"\n",(0,r.jsx)(n.p,{children:"(Experimental) A MathChat agent that can handle math problems."}),"\n",(0,r.jsx)(n.h4,{id:"max_consecutive_auto_reply",children:"MAX_CONSECUTIVE_AUTO_REPLY"}),"\n",(0,r.jsx)(n.p,{children:"maximum number of consecutive auto replies (subject to future change)"}),"\n",(0,r.jsx)(n.h3,{id:"__init__",children:"__init__"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def __init__(name: Optional[str] = "MathChatAgent",\n             is_termination_msg: Optional[Callable[\n                 [Dict], bool]] = _is_termination_msg_mathchat,\n             human_input_mode: Literal["ALWAYS", "NEVER",\n                                       "TERMINATE"] = "NEVER",\n             default_auto_reply: Optional[Union[str, Dict,\n                                                None]] = DEFAULT_REPLY,\n             max_invalid_q_per_step=3,\n             **kwargs)\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," ",(0,r.jsx)(n.em,{children:"str"})," - name of the agent"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"is_termination_msg"})," ",(0,r.jsx)(n.em,{children:"function"}),' - a function that takes a message in the form of a dictionary and returns a boolean value indicating if this received message is a termination message.\nThe dict can contain the following keys: "content", "role", "name", "function_call".']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"human_input_mode"})," ",(0,r.jsx)(n.em,{children:"str"}),' - whether to ask for human inputs every time a message is received.\nPossible values are "ALWAYS", "TERMINATE", "NEVER".\n(1) When "ALWAYS", the agent prompts for human input every time a message is received.\nUnder this mode, the conversation stops when the human input is "exit",\nor when is_termination_msg is True and there is no human input.\n(2) When "TERMINATE", the agent only prompts for human input only when a termination message is received or\nthe number of auto reply reaches the max_consecutive_auto_reply.\n(3) (Default) When "NEVER", the agent will never prompt for human input. Under this mode, the conversation stops\nwhen the number of auto reply reaches the max_consecutive_auto_reply or when is_termination_msg is True.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"default_auto_reply"})," ",(0,r.jsx)(n.em,{children:"str or dict or None"})," - the default auto reply message when no code execution or llm based reply is generated."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"max_invalid_q_per_step"})," ",(0,r.jsx)(n.em,{children:"int"})," - (ADDED) the maximum number of invalid queries per step."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"**kwargs"})," ",(0,r.jsx)(n.em,{children:"dict"})," - other kwargs in ",(0,r.jsx)(n.a,{href:"../user_proxy_agent#__init__",children:"UserProxyAgent"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"message_generator",children:"message_generator"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@staticmethod\ndef message_generator(sender, recipient, context)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Generate a prompt for the assistant agent with the given problem and prompt."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sender"})," ",(0,r.jsx)(n.em,{children:"Agent"})," - the sender of the message."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"recipient"})," ",(0,r.jsx)(n.em,{children:"Agent"})," - the recipient of the message."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"context"})," ",(0,r.jsx)(n.em,{children:"dict"})," - a dictionary with the following fields:"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"problem"})," ",(0,r.jsx)(n.em,{children:"str"})," - the problem to be solved."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"prompt_type"})," ",(0,r.jsx)(n.em,{children:"str, Optional"}),' - the type of the prompt. Possible values are "default", "python", "wolfram".\n(1) "default": the prompt that allows the agent to choose between 3 ways to solve a problem:\n',(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"write a python program to solve it directly."}),"\n",(0,r.jsx)(n.li,{children:"solve it directly without python."}),"\n",(0,r.jsx)(n.li,{children:'solve it step by step with python.\n(2) "python":\na simplified prompt from the third way of the "default" prompt, that asks the assistant\nto solve the problem step by step with python.\n(3) "two_tools":\na simplified prompt similar to the "python" prompt, but allows the model to choose between\nPython and Wolfram Alpha to solve the problem.'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"customized_prompt"})," ",(0,r.jsx)(n.em,{children:"str, Optional"})," - a customized prompt to be used. If it is not None, the prompt_type will be ignored."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"})," - the generated prompt ready to be sent to the assistant agent."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"execute_one_python_code",children:"execute_one_python_code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def execute_one_python_code(pycode)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Execute python code blocks."}),"\n",(0,r.jsx)(n.p,{children:'Previous python code will be saved and executed together with the new code.\nthe "print" function will also be added to the last line of the code if needed'}),"\n",(0,r.jsx)(n.h3,{id:"execute_one_wolfram_query",children:"execute_one_wolfram_query"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def execute_one_wolfram_query(query: str)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run one wolfram query and return the output."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"query"})," - string of the query."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"output"})," - string with the output of the query."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"is_success"})," - boolean indicating whether the query was successful."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"get_from_dict_or_env",children:"get_from_dict_or_env"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_from_dict_or_env(data: Dict[str, Any],\n                         key: str,\n                         env_key: str,\n                         default: Optional[str] = None) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Get a value from a dictionary or an environment variable."}),"\n",(0,r.jsx)(n.h2,{id:"wolframalphaapiwrapper",children:"WolframAlphaAPIWrapper"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class WolframAlphaAPIWrapper(BaseModel)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Wrapper for Wolfram Alpha."}),"\n",(0,r.jsx)(n.p,{children:"Docs for using:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Go to wolfram alpha and sign up for a developer account"}),"\n",(0,r.jsx)(n.li,{children:"Create an app and get your APP ID"}),"\n",(0,r.jsx)(n.li,{children:"Save your APP ID into WOLFRAM_ALPHA_APPID env variable"}),"\n",(0,r.jsx)(n.li,{children:"pip install wolframalpha"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"wolfram_client",children:"wolfram_client"}),"\n",(0,r.jsx)(n.p,{children:":meta private:"}),"\n",(0,r.jsx)(n.h2,{id:"config",children:"Config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Config()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Configuration for this pydantic object."}),"\n",(0,r.jsx)(n.h3,{id:"validate_environment",children:"validate_environment"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@root_validator(skip_on_failure=True)\ndef validate_environment(cls, values: Dict) -> Dict\n"})}),"\n",(0,r.jsx)(n.p,{children:"Validate that api key and python package exists in environment."}),"\n",(0,r.jsx)(n.h3,{id:"run",children:"run"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def run(query: str) -> Tuple[str, bool]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run query through WolframAlpha and parse result."})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var r=t(67294);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);