"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6146],{2495:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var s=t(85893),a=t(11151);const o={custom_edit_url:"https://github.com/microsoft/autogen/edit/main/notebook/agentchat_agentops.ipynb",description:"Use AgentOps to simplify the development process and monitor your agents in production.",source_notebook:"/notebook/agentchat_agentops.ipynb",tags:["monitoring","debugging"],title:"Agent Tracking with AgentOps"},i="Agent Tracking with AgentOps",r={id:"notebooks/agentchat_agentops",title:"Agent Tracking with AgentOps",description:"Use AgentOps to simplify the development process and monitor your agents in production.",source:"@site/docs/notebooks/agentchat_agentops.mdx",sourceDirName:"notebooks",slug:"/notebooks/agentchat_agentops",permalink:"/autogen/docs/notebooks/agentchat_agentops",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/notebook/agentchat_agentops.ipynb",tags:[{label:"monitoring",permalink:"/autogen/docs/tags/monitoring"},{label:"debugging",permalink:"/autogen/docs/tags/debugging"}],version:"current",frontMatter:{custom_edit_url:"https://github.com/microsoft/autogen/edit/main/notebook/agentchat_agentops.ipynb",description:"Use AgentOps to simplify the development process and monitor your agents in production.",source_notebook:"/notebook/agentchat_agentops.ipynb",tags:["monitoring","debugging"],title:"Agent Tracking with AgentOps"},sidebar:"notebooksSidebar",previous:{title:"Using RetrieveChat with Qdrant for Retrieve Augmented Code Generation and Question Answering",permalink:"/autogen/docs/notebooks/agentchat_RetrieveChat_qdrant"},next:{title:"AgentOptimizer: An Agentic Way to Train Your LLM Agent",permalink:"/autogen/docs/notebooks/agentchat_agentoptimizer"}},l={},c=[{value:"Overview Dashboard",id:"overview-dashboard",level:3},{value:"Session Replays",id:"session-replays",level:3},{value:"Adding AgentOps to an existing Autogen service.",id:"adding-agentops-to-an-existing-autogen-service.",level:2},{value:"Set an API key",id:"set-an-api-key",level:3}];function g(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"agent-tracking-with-agentops",children:"Agent Tracking with AgentOps"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.a,{href:"https://colab.research.google.com/github/microsoft/autogen/blob/main/notebook/agentchat_agentops.ipynb",children:(0,s.jsx)(e.img,{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})}),"\n",(0,s.jsx)(e.a,{href:"https://github.com/microsoft/autogen/blob/main/notebook/agentchat_agentops.ipynb",children:(0,s.jsx)(e.img,{src:"https://img.shields.io/badge/Open%20on%20GitHub-grey?logo=github",alt:"Open on GitHub"})})]}),"\n",(0,s.jsx)("img",{src:"https://github.com/AgentOps-AI/agentops/blob/main/docs/images/external/logo/banner-badge.png?raw=true"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.a,{href:"https://agentops.ai/?=autogen",children:"AgentOps"})," provides session replays,\nmetrics, and monitoring for AI agents."]}),"\n",(0,s.jsxs)(e.p,{children:["At a high level, AgentOps gives you the ability to monitor LLM calls,\ncosts, latency, agent failures, multi-agent interactions, tool usage,\nsession-wide statistics, and more. For more info, check out the\n",(0,s.jsx)(e.a,{href:"https://github.com/AgentOps-AI/agentops",children:"AgentOps Repo"}),"."]}),"\n",(0,s.jsx)(e.h3,{id:"overview-dashboard",children:"Overview Dashboard"}),"\n",(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/AgentOps-AI/agentops/main/docs/images/external/app_screenshots/overview.gif"}),"\n",(0,s.jsx)(e.h3,{id:"session-replays",children:"Session Replays"}),"\n",(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/AgentOps-AI/agentops/main/docs/images/external/app_screenshots/drilldown.gif"}),"\n",(0,s.jsx)(e.h2,{id:"adding-agentops-to-an-existing-autogen-service.",children:"Adding AgentOps to an existing Autogen service."}),"\n",(0,s.jsx)(e.p,{children:"To get started, you\u2019ll need to install the AgentOps package and set an\nAPI key."}),"\n",(0,s.jsx)(e.p,{children:"AgentOps automatically configures itself when it\u2019s initialized meaning\nyour agent run data will be tracked and logged to your AgentOps account\nright away."}),"\n",(0,s.jsxs)(e.admonition,{title:"Requirements",type:"info",children:[(0,s.jsx)(e.p,{children:"Some extra dependencies are needed for this notebook, which can be installed via pip:"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"pip install pyautogen agentops\n"})}),(0,s.jsxs)(e.p,{children:["For more information, please refer to the ",(0,s.jsx)(e.a,{href:"/docs/installation/",children:"installation guide"}),"."]})]}),"\n",(0,s.jsx)(e.h3,{id:"set-an-api-key",children:"Set an API key"}),"\n",(0,s.jsxs)(e.p,{children:["By default, the AgentOps ",(0,s.jsx)(e.code,{children:"init()"})," function will look for an environment\nvariable named ",(0,s.jsx)(e.code,{children:"AGENTOPS_API_KEY"}),". Alternatively, you can pass one in as\nan optional parameter."]}),"\n",(0,s.jsxs)(e.p,{children:["Create an account and obtain an API key at\n",(0,s.jsx)(e.a,{href:"https://agentops.ai/settings/projects",children:"AgentOps.ai"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import agentops\n\nfrom autogen import ConversableAgent, UserProxyAgent, config_list_from_json\n\nagentops.init(api_key="...")\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-text",children:"\ud83d\udd87 AgentOps: Session Replay: https://app.agentops.ai/drilldown?session_id=8bfaeed1-fd51-4c68-b3ec-276b1a3ce8a4\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-text",children:"UUID('8bfaeed1-fd51-4c68-b3ec-276b1a3ce8a4')\n"})}),"\n",(0,s.jsx)(e.p,{children:"Autogen will now start automatically tracking - LLM prompts and\ncompletions - Token usage and costs - Agent names and actions -\nCorrespondence between agents - Tool usage - Errors"}),"\n",(0,s.jsx)(e.h1,{id:"simple-chat-example",children:"Simple Chat Example"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import agentops\n\n# When initializing AgentOps, you can pass in optional tags to help filter sessions\nagentops.init(tags=["simple-autogen-example"])\n\n# Create the agent that uses the LLM.\nconfig_list = config_list_from_json(env_or_file="OAI_CONFIG_LIST")\nassistant = ConversableAgent("agent", llm_config={"config_list": config_list})\n\n# Create the agent that represents the user in the conversation.\nuser_proxy = UserProxyAgent("user", code_execution_config=False)\n\n# Let the assistant start the conversation.  It will end when the user types "exit".\nassistant.initiate_chat(user_proxy, message="How can I help you today?")\n\n# Close your AgentOps session to indicate that it completed.\nagentops.end_session("Success")\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-text",children:"agent (to user):\n\nHow can I help you today?\n\n--------------------------------------------------------------------------------\nuser (to agent):\n\n2+2\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nagent (to user):\n\n2 + 2 equals 4.\n\n--------------------------------------------------------------------------------\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-text",children:"\ud83d\udd87 AgentOps: This run's cost $0.000960\n\ud83d\udd87 AgentOps: Session Replay: https://app.agentops.ai/drilldown?session_id=8bfaeed1-fd51-4c68-b3ec-276b1a3ce8a4\n"})}),"\n",(0,s.jsxs)(e.p,{children:["You can view data on this run at\n",(0,s.jsx)(e.a,{href:"https://app.agentops.ai",children:"app.agentops.ai"}),"."]}),"\n",(0,s.jsx)(e.p,{children:"The dashboard will display LLM events for each message sent by each\nagent, including those made by the human user."}),"\n",(0,s.jsxs)("figure",{children:[(0,s.jsx)("img",{src:"https://github.com/AgentOps-AI/agentops/blob/main/docs/images/external/app_screenshots/session-overview.png?raw=true",alt:"session replay"}),(0,s.jsx)("figcaption",{"aria-hidden":"true",children:"session replay"})]}),"\n",(0,s.jsx)(e.h1,{id:"tool-example",children:"Tool Example"}),"\n",(0,s.jsxs)(e.p,{children:["AgentOps also tracks when Autogen agents use tools. You can find more\ninformation on this example in\n",(0,s.jsx)(e.a,{href:"https://github.com/microsoft/autogen/blob/main/website/docs/tutorial/tool-use.ipynb",children:"tool-use.ipynb"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'from typing import Annotated, Literal\n\nfrom autogen import ConversableAgent, config_list_from_json, register_function\n\nagentops.start_session(tags=["autogen-tool-example"])\n\nOperator = Literal["+", "-", "*", "/"]\n\n\ndef calculator(a: int, b: int, operator: Annotated[Operator, "operator"]) -> int:\n    if operator == "+":\n        return a + b\n    elif operator == "-":\n        return a - b\n    elif operator == "*":\n        return a * b\n    elif operator == "/":\n        return int(a / b)\n    else:\n        raise ValueError("Invalid operator")\n\n\nconfig_list = config_list_from_json(env_or_file="OAI_CONFIG_LIST")\n\n# Create the agent that uses the LLM.\nassistant = ConversableAgent(\n    name="Assistant",\n    system_message="You are a helpful AI assistant. "\n    "You can help with simple calculations. "\n    "Return \'TERMINATE\' when the task is done.",\n    llm_config={"config_list": config_list},\n)\n\n# The user proxy agent is used for interacting with the assistant agent\n# and executes tool calls.\nuser_proxy = ConversableAgent(\n    name="User",\n    llm_config=False,\n    is_termination_msg=lambda msg: msg.get("content") is not None and "TERMINATE" in msg["content"],\n    human_input_mode="NEVER",\n)\n\nassistant.register_for_llm(name="calculator", description="A simple calculator")(calculator)\nuser_proxy.register_for_execution(name="calculator")(calculator)\n\n# Register the calculator function to the two agents.\nregister_function(\n    calculator,\n    caller=assistant,  # The assistant agent can suggest calls to the calculator.\n    executor=user_proxy,  # The user proxy agent can execute the calculator calls.\n    name="calculator",  # By default, the function name is used as the tool name.\n    description="A simple calculator",  # A description of the tool.\n)\n\n# Let the assistant start the conversation.  It will end when the user types "exit".\nuser_proxy.initiate_chat(assistant, message="What is (1423 - 123) / 3 + (32 + 23) * 5?")\n\nagentops.end_session("Success")\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-text",children:"\ud83d\udd87 AgentOps: Session Replay: https://app.agentops.ai/drilldown?session_id=880c206b-751e-4c23-9313-8684537fc04d\n/Users/braelynboynton/Developer/agentops/autogen/autogen/agentchat/conversable_agent.py:2489: UserWarning: Function 'calculator' is being overridden.\n  warnings.warn(f\"Function '{tool_sig['function']['name']}' is being overridden.\", UserWarning)\n/Users/braelynboynton/Developer/agentops/autogen/autogen/agentchat/conversable_agent.py:2408: UserWarning: Function 'calculator' is being overridden.\n  warnings.warn(f\"Function '{name}' is being overridden.\", UserWarning)\n\ud83d\udd87 AgentOps: This run's cost $0.001800\n\ud83d\udd87 AgentOps: Session Replay: https://app.agentops.ai/drilldown?session_id=880c206b-751e-4c23-9313-8684537fc04d\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-text",children:'User (to Assistant):\n\nWhat is (1423 - 123) / 3 + (32 + 23) * 5?\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nAssistant (to User):\n\n***** Suggested tool call (call_aINcGyo0Xkrh9g7buRuhyCz0): calculator *****\nArguments: \n{\n  "a": 1423,\n  "b": 123,\n  "operator": "-"\n}\n***************************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> EXECUTING FUNCTION calculator...\nUser (to Assistant):\n\nUser (to Assistant):\n\n***** Response from calling tool (call_aINcGyo0Xkrh9g7buRuhyCz0) *****\n1300\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nAssistant (to User):\n\n***** Suggested tool call (call_prJGf8V0QVT7cbD91e0Fcxpb): calculator *****\nArguments: \n{\n  "a": 1300,\n  "b": 3,\n  "operator": "/"\n}\n***************************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> EXECUTING FUNCTION calculator...\nUser (to Assistant):\n\nUser (to Assistant):\n\n***** Response from calling tool (call_prJGf8V0QVT7cbD91e0Fcxpb) *****\n433\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nAssistant (to User):\n\n***** Suggested tool call (call_CUIgHRsySLjayDKuUphI1TGm): calculator *****\nArguments: \n{\n  "a": 32,\n  "b": 23,\n  "operator": "+"\n}\n***************************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> EXECUTING FUNCTION calculator...\nUser (to Assistant):\n\nUser (to Assistant):\n\n***** Response from calling tool (call_CUIgHRsySLjayDKuUphI1TGm) *****\n55\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nAssistant (to User):\n\n***** Suggested tool call (call_L7pGtBLUf9V0MPL90BASyesr): calculator *****\nArguments: \n{\n  "a": 55,\n  "b": 5,\n  "operator": "*"\n}\n***************************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> EXECUTING FUNCTION calculator...\nUser (to Assistant):\n\nUser (to Assistant):\n\n***** Response from calling tool (call_L7pGtBLUf9V0MPL90BASyesr) *****\n275\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nAssistant (to User):\n\n***** Suggested tool call (call_Ygo6p4XfcxRjkYBflhG3UVv6): calculator *****\nArguments: \n{\n  "a": 433,\n  "b": 275,\n  "operator": "+"\n}\n***************************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> EXECUTING FUNCTION calculator...\nUser (to Assistant):\n\nUser (to Assistant):\n\n***** Response from calling tool (call_Ygo6p4XfcxRjkYBflhG3UVv6) *****\n708\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nAssistant (to User):\n\nThe result of the calculation is 708.\n\n--------------------------------------------------------------------------------\nUser (to Assistant):\n\n\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nAssistant (to User):\n\nTERMINATE\n\n--------------------------------------------------------------------------------\n'})}),"\n",(0,s.jsxs)(e.p,{children:["You can see your run in action at\n",(0,s.jsx)(e.a,{href:"https://app.agentops.ai",children:"app.agentops.ai"}),". In this example, the\nAgentOps dashboard will show: - Agents talking to each other - Each use\nof the ",(0,s.jsx)(e.code,{children:"calculator"})," tool - Each call to OpenAI for LLM use"]}),"\n",(0,s.jsxs)("figure",{children:[(0,s.jsx)("img",{src:"https://github.com/AgentOps-AI/agentops/blob/main/docs/images/external/app_screenshots/session-replay.png?raw=true",alt:"Session Drilldown"}),(0,s.jsx)("figcaption",{"aria-hidden":"true",children:"Session Drilldown"})]})]})}function p(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(g,{...n})}):g(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>i});var s=t(67294);const a={},o=s.createContext(a);function i(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);