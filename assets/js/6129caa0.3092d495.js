"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7117],{52222:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>r,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var t=n(85893),a=n(11151);const s={custom_edit_url:"https://github.com/microsoft/autogen/edit/main/website/docs/topics/non-openai-models/local-lm-studio.ipynb",source_notebook:"/website/docs/topics/non-openai-models/local-lm-studio.ipynb",title:"LM Studio"},i="LM Studio",l={id:"topics/non-openai-models/local-lm-studio",title:"LM Studio",description:"Open In Colab",source:"@site/docs/topics/non-openai-models/local-lm-studio.mdx",sourceDirName:"topics/non-openai-models",slug:"/topics/non-openai-models/local-lm-studio",permalink:"/autogen/docs/topics/non-openai-models/local-lm-studio",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/topics/non-openai-models/local-lm-studio.ipynb",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/microsoft/autogen/edit/main/website/docs/topics/non-openai-models/local-lm-studio.ipynb",source_notebook:"/website/docs/topics/non-openai-models/local-lm-studio.ipynb",title:"LM Studio"},sidebar:"docsSidebar",previous:{title:"LiteLLM with Ollama",permalink:"/autogen/docs/topics/non-openai-models/local-litellm-ollama"},next:{title:"vLLM",permalink:"/autogen/docs/topics/non-openai-models/local-vllm"}},c={},m=[{value:"Two Agent Chats",id:"two-agent-chats",level:2}];function d(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"lm-studio",children:"LM Studio"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://colab.research.google.com/github/microsoft/autogen/blob/main/website/docs/topics/non-openai-models/local-lm-studio.ipynb",children:(0,t.jsx)(o.img,{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})}),"\n",(0,t.jsx)(o.a,{href:"https://github.com/microsoft/autogen/blob/main/website/docs/topics/non-openai-models/local-lm-studio.ipynb",children:(0,t.jsx)(o.img,{src:"https://img.shields.io/badge/Open%20on%20GitHub-grey?logo=github",alt:"Open on GitHub"})})]}),"\n",(0,t.jsxs)(o.p,{children:["This notebook shows how to use AutoGen with multiple local models using\n",(0,t.jsx)(o.a,{href:"https://lmstudio.ai/",children:"LM Studio"}),"\u2019s multi-model serving feature, which\nis available since version 0.2.17 of LM Studio."]}),"\n",(0,t.jsx)(o.p,{children:"To use the multi-model serving feature in LM Studio, you can start a\n\u201cMulti Model Session\u201d in the \u201cPlayground\u201d tab. Then you select relevant\nmodels to load. Once the models are loaded, you can click \u201cStart Server\u201d\nto start the multi-model serving. The models will be available at a\nlocally hosted OpenAI-compatible endpoint."}),"\n",(0,t.jsx)(o.h2,{id:"two-agent-chats",children:"Two Agent Chats"}),"\n",(0,t.jsx)(o.p,{children:"In this example, we create a comedy chat between two agents using two\ndifferent local models, Phi-2 and Gemma it."}),"\n",(0,t.jsx)(o.p,{children:"We first create configurations for the models."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-python",children:'gemma = {\n    "config_list": [\n        {\n            "model": "lmstudio-ai/gemma-2b-it-GGUF/gemma-2b-it-q8_0.gguf:0",\n            "base_url": "http://localhost:1234/v1",\n            "api_key": "lm-studio",\n        },\n    ],\n    "cache_seed": None,  # Disable caching.\n}\n\nphi2 = {\n    "config_list": [\n        {\n            "model": "TheBloke/phi-2-GGUF/phi-2.Q4_K_S.gguf:0",\n            "base_url": "http://localhost:1234/v1",\n            "api_key": "lm-studio",\n        },\n    ],\n    "cache_seed": None,  # Disable caching.\n}\n'})}),"\n",(0,t.jsx)(o.p,{children:"Now we create two agents, one for each model."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-python",children:'from autogen import ConversableAgent\n\njack = ConversableAgent(\n    "Jack (Phi-2)",\n    llm_config=phi2,\n    system_message="Your name is Jack and you are a comedian in a two-person comedy show.",\n)\nemma = ConversableAgent(\n    "Emma (Gemma)",\n    llm_config=gemma,\n    system_message="Your name is Emma and you are a comedian in two-person comedy show.",\n)\n'})}),"\n",(0,t.jsx)(o.p,{children:"Now we start the conversation."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-python",children:'chat_result = jack.initiate_chat(emma, message="Emma, tell me a joke.", max_turns=2)\n'})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-text",children:"Jack (Phi-2) (to Emma (Gemma)):\n\nEmma, tell me a joke.\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nEmma (Gemma) (to Jack (Phi-2)):\n\nSure! Here's a joke for you:\n\nWhat do you call a comedian who's too emotional?\n\nAn emotional wreck!\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nJack (Phi-2) (to Emma (Gemma)):\n\nLOL, that's a good one, Jack! You're hilarious. \ud83d\ude02\ud83d\udc4f\ud83d\udc4f\n\n\n--------------------------------------------------------------------------------\n\n>>>>>>>> USING AUTO REPLY...\nEmma (Gemma) (to Jack (Phi-2)):\n\nThank you! I'm just trying to make people laugh, you know? And to help them forget about the troubles of the world for a while.\n\n--------------------------------------------------------------------------------\n"})})]})}function r(e={}){const{wrapper:o}={...(0,a.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,o,n)=>{n.d(o,{Z:()=>l,a:()=>i});var t=n(67294);const a={},s=t.createContext(a);function i(e){const o=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:o},e.children)}}}]);