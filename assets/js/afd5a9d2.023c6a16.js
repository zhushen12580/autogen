"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2246],{80023:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>g});var r=t(85893),i=t(11151);const s={sidebar_label:"runtime_logging",title:"runtime_logging"},o=void 0,l={id:"reference/runtime_logging",title:"runtime_logging",description:"start",source:"@site/docs/reference/runtime_logging.md",sourceDirName:"reference",slug:"/reference/runtime_logging",permalink:"/autogen/docs/reference/runtime_logging",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/runtime_logging.md",tags:[],version:"current",frontMatter:{sidebar_label:"runtime_logging",title:"runtime_logging"},sidebar:"referenceSideBar",previous:{title:"retrieve_utils",permalink:"/autogen/docs/reference/retrieve_utils"},next:{title:"token_count_utils",permalink:"/autogen/docs/reference/token_count_utils"}},c={},g=[{value:"start",id:"start",level:3}];function u(e){const n={code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"start",children:"start"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def start(logger: Optional[BaseLogger] = None,\n          logger_type: Literal["sqlite", "file"] = "sqlite",\n          config: Optional[Dict[str, Any]] = None) -> str\n'})}),"\n",(0,r.jsx)(n.p,{children:"Start logging for the runtime."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"logger"})," ",(0,r.jsx)(n.em,{children:"BaseLogger"})," - A logger instance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"logger_type"})," ",(0,r.jsx)(n.em,{children:"str"})," - The type of logger to use (default: sqlite)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config"})," ",(0,r.jsx)(n.em,{children:"dict"})," - Configuration for the logger"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"session_id (str(uuid.uuid4)):       a unique id for the logging session"})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>o});var r=t(67294);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);