"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7815],{30625:t=>{t.exports=JSON.parse('{"label":"OpenAI Assistant","permalink":"/autogen/docs/tags/open-ai-assistant","allTagsPath":"/autogen/docs/tags","count":4,"items":[{"id":"notebooks/agentchat_oai_code_interpreter","title":"Auto Generated Agent Chat: GPTAssistant with Code Interpreter","description":"This Jupyter Notebook showcases the integration of the Code Interpreter tool which executes Python code dynamically within applications.","permalink":"/autogen/docs/notebooks/agentchat_oai_code_interpreter"},{"id":"notebooks/agentchat_oai_assistant_groupchat","title":"Auto Generated Agent Chat: Group Chat with GPTAssistantAgent","description":"This Jupyter Notebook demonstrates how to use the GPTAssistantAgent in AutoGen\'s group chat mode, enabling collaborative task performance through automated chat with agents powered by LLMs, tools, or humans.","permalink":"/autogen/docs/notebooks/agentchat_oai_assistant_groupchat"},{"id":"notebooks/agentchat_oai_assistant_function_call","title":"Chat with OpenAI Assistant using function call in AutoGen: OSS Insights for Advanced GitHub Data Analysis","description":"This Jupyter Notebook demonstrates how to leverage OSS Insight (Open Source Software Insight) for advanced GitHub data analysis by defining `Function calls` in AutoGen for the OpenAI Assistant.","permalink":"/autogen/docs/notebooks/agentchat_oai_assistant_function_call"},{"id":"notebooks/gpt_assistant_agent_function_call","title":"From Dad Jokes To Sad Jokes: Function Calling with GPTAssistantAgent","description":"This comprehensive example demonstrates the use of tools in a GPTAssistantAgent Multi-Agent System by utilizing functions such as calling an API and writing to a file.","permalink":"/autogen/docs/notebooks/gpt_assistant_agent_function_call"}],"unlisted":false}')}}]);