"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9571],{183:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>u});var o=t(85893),r=t(11151);const c={custom_edit_url:"https://github.com/microsoft/autogen/edit/main/website/docs/topics/code-execution/jupyter-code-executor.ipynb",source_notebook:"/website/docs/topics/code-execution/jupyter-code-executor.ipynb",title:"Jupyter Code Executor"},i="Jupyter Code Executor",s={id:"topics/code-execution/jupyter-code-executor",title:"Jupyter Code Executor",description:"Open In Colab",source:"@site/docs/topics/code-execution/jupyter-code-executor.mdx",sourceDirName:"topics/code-execution",slug:"/topics/code-execution/jupyter-code-executor",permalink:"/autogen/docs/topics/code-execution/jupyter-code-executor",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/topics/code-execution/jupyter-code-executor.ipynb",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/microsoft/autogen/edit/main/website/docs/topics/code-execution/jupyter-code-executor.ipynb",source_notebook:"/website/docs/topics/code-execution/jupyter-code-executor.ipynb",title:"Jupyter Code Executor"},sidebar:"docsSidebar",previous:{title:"Custom Code Executor",permalink:"/autogen/docs/topics/code-execution/custom-executor"},next:{title:"User Defined Functions",permalink:"/autogen/docs/topics/code-execution/user-defined-functions"}},a={},u=[{value:"Dependencies",id:"dependencies",level:2},{value:"Jupyter Server",id:"jupyter-server",level:2},{value:"Docker",id:"docker",level:3},{value:"Custom Docker Image",id:"custom-docker-image",level:4},{value:"Local",id:"local",level:3},{value:"Remote",id:"remote",level:3},{value:"Image outputs",id:"image-outputs",level:2},{value:"Assigning to an agent",id:"assigning-to-an-agent",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"jupyter-code-executor",children:"Jupyter Code Executor"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://colab.research.google.com/github/microsoft/autogen/blob/main/website/docs/topics/code-execution/jupyter-code-executor.ipynb",children:(0,o.jsx)(n.img,{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})}),"\n",(0,o.jsx)(n.a,{href:"https://github.com/microsoft/autogen/blob/main/website/docs/topics/code-execution/jupyter-code-executor.ipynb",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/badge/Open%20on%20GitHub-grey?logo=github",alt:"Open on GitHub"})})]}),"\n",(0,o.jsx)(n.p,{children:"AutoGen is able to execute code in a stateful Jupyter kernel, this is in\ncontrast to the command line code executor where each code block is\nexecuted in a new process. This means that you can define variables in\none code block and use them in another. One of the interesting\nproperties of this is that when an error is encountered, only the\nfailing code needs to be re-executed, and not the entire script."}),"\n",(0,o.jsxs)(n.p,{children:["To use the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/jupyter_code_executor#jupytercodeexecutor",children:(0,o.jsx)(n.code,{children:"JupyterCodeExecutor"})}),"\nyou need a Jupyter server running. This can be in Docker, local, or even\na remote server. Then, when constructing the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/jupyter_code_executor#jupytercodeexecutor",children:(0,o.jsx)(n.code,{children:"JupyterCodeExecutor"})}),"\nyou pass it the server it should connect to."]}),"\n",(0,o.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,o.jsxs)(n.p,{children:["In order to use Jupyter based code execution some extra dependencies are\nrequired. These can be installed with the extra ",(0,o.jsx)(n.code,{children:"jupyter-executor"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install 'pyautogen[jupyter-executor]'\n"})}),"\n",(0,o.jsx)(n.h2,{id:"jupyter-server",children:"Jupyter Server"}),"\n",(0,o.jsx)(n.h3,{id:"docker",children:"Docker"}),"\n",(0,o.jsxs)(n.p,{children:["To run a Docker based Jupyter server, the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/docker_jupyter_server#dockerjupyterserver",children:(0,o.jsx)(n.code,{children:"DockerJupyterServer"})}),"\ncan be used."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from autogen.coding import CodeBlock\nfrom autogen.coding.jupyter import DockerJupyterServer, JupyterCodeExecutor\n\nwith DockerJupyterServer() as server:\n    executor = JupyterCodeExecutor(server)\n    print(\n        executor.execute_code_blocks(\n            code_blocks=[\n                CodeBlock(language="python", code="print(\'Hello, World!\')"),\n            ]\n        )\n    )\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"exit_code=0 output='Hello, World!\\n' output_files=[]\n"})}),"\n",(0,o.jsxs)(n.p,{children:["By default the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/docker_jupyter_server#dockerjupyterserver",children:(0,o.jsx)(n.code,{children:"DockerJupyterServer"})}),"\nwill build and use a bundled Dockerfile, which can be seen below:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"print(DockerJupyterServer.DEFAULT_DOCKERFILE)\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:'FROM quay.io/jupyter/docker-stacks-foundation\n\nSHELL ["/bin/bash", "-o", "pipefail", "-c"]\n\nUSER ${NB_UID}\nRUN mamba install --yes jupyter_kernel_gateway ipykernel &&     mamba clean --all -f -y &&     fix-permissions "${CONDA_DIR}" &&     fix-permissions "/home/${NB_USER}"\n\nENV TOKEN="UNSET"\nCMD python -m jupyter kernelgateway --KernelGatewayApp.ip=0.0.0.0     --KernelGatewayApp.port=8888     --KernelGatewayApp.auth_token="${TOKEN}"     --JupyterApp.answer_yes=true     --JupyterWebsocketPersonality.list_kernels=true\n\nEXPOSE 8888\n\nWORKDIR "${HOME}"\n'})}),"\n",(0,o.jsx)(n.h4,{id:"custom-docker-image",children:"Custom Docker Image"}),"\n",(0,o.jsxs)(n.p,{children:["A custom image can be used by passing the ",(0,o.jsx)(n.code,{children:"custom_image_name"})," parameter\nto the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/docker_jupyter_server#dockerjupyterserver",children:(0,o.jsx)(n.code,{children:"DockerJupyterServer"})}),"\nconstructor. There are some requirements of the image for it to work\ncorrectly:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The image must have ",(0,o.jsx)(n.a,{href:"https://jupyter-kernel-gateway.readthedocs.io/en/latest/",children:"Jupyer Kernel\nGateway"}),"\ninstalled and running on port 8888 for the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/jupyter_code_executor",children:(0,o.jsx)(n.code,{children:"JupyterCodeExecutor"})}),"\nto be able to connect to it."]}),"\n",(0,o.jsxs)(n.li,{children:["Respect the ",(0,o.jsx)(n.code,{children:"TOKEN"})," environment variable, which is used to\nauthenticate the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/jupyter_code_executor",children:(0,o.jsx)(n.code,{children:"JupyterCodeExecutor"})}),"\nwith the Jupyter server."]}),"\n",(0,o.jsxs)(n.li,{children:["Ensure the ",(0,o.jsx)(n.code,{children:"jupyter kernelgateway"})," is started with:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--JupyterApp.answer_yes=true"})," - this ensures that the kernel\ngateway does not prompt for confirmation when shut down."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--JupyterWebsocketPersonality.list_kernels=true"})," - this ensures\nthat the kernel gateway lists the available kernels."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["If you wanted to add extra dependencies (for example ",(0,o.jsx)(n.code,{children:"matplotlib"})," and\n",(0,o.jsx)(n.code,{children:"numpy"}),") to this image you could customize the Dockerfile like so:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dockerfile",children:'FROM quay.io/jupyter/docker-stacks-foundation\n\nSHELL ["/bin/bash", "-o", "pipefail", "-c"]\n\nUSER ${NB_UID}\nRUN mamba install --yes jupyter_kernel_gateway ipykernel matplotlib numpy &&\n    mamba clean --all -f -y &&\n    fix-permissions "${CONDA_DIR}" &&\n    fix-permissions "/home/${NB_USER}"\n\nENV TOKEN="UNSET"\nCMD python -m jupyter kernelgateway \\\n    --KernelGatewayApp.ip=0.0.0.0 \\\n    --KernelGatewayApp.port=8888 \\\n    --KernelGatewayApp.auth_token="${TOKEN}" \\\n    --JupyterApp.answer_yes=true \\\n    --JupyterWebsocketPersonality.list_kernels=true\n\nEXPOSE 8888\n\nWORKDIR "${HOME}"\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["To learn about how to combine AutoGen in a Docker image while also executing code in a separate image go ",(0,o.jsx)(n.a,{href:"/docs/topics/code-execution/cli-code-executor#combining-autogen-in-docker-with-a-docker-based-executor",children:"here"}),"."]})}),"\n",(0,o.jsx)(n.h3,{id:"local",children:"Local"}),"\n",(0,o.jsx)(n.admonition,{type:"danger",children:(0,o.jsx)(n.p,{children:"The local version will run code on your local system. Use it with caution."})}),"\n",(0,o.jsxs)(n.p,{children:["To run a local Jupyter server, the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/local_jupyter_server#localjupyterserver",children:(0,o.jsx)(n.code,{children:"LocalJupyterServer"})}),"\ncan be used."]}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"/docs/reference/coding/jupyter/local_jupyter_server#localjupyterserver",children:(0,o.jsx)(n.code,{children:"LocalJupyterServer"})})," does not function on Windows due to a bug. In this case, you can use the ",(0,o.jsx)(n.a,{href:"/docs/reference/coding/jupyter/docker_jupyter_server#dockerjupyterserver",children:(0,o.jsx)(n.code,{children:"DockerJupyterServer"})})," instead or use the ",(0,o.jsx)(n.a,{href:"/docs/reference/coding/jupyter/embedded_ipython_code_executor",children:(0,o.jsx)(n.code,{children:"EmbeddedIPythonCodeExecutor"})}),". Do note that the intention is to remove the ",(0,o.jsx)(n.a,{href:"/docs/reference/coding/jupyter/embedded_ipython_code_executor",children:(0,o.jsx)(n.code,{children:"EmbeddedIPythonCodeExecutor"})})," when the bug is fixed."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from autogen.coding import CodeBlock\nfrom autogen.coding.jupyter import JupyterCodeExecutor, LocalJupyterServer\n\nwith LocalJupyterServer() as server:\n    executor = JupyterCodeExecutor(server)\n    print(\n        executor.execute_code_blocks(\n            code_blocks=[\n                CodeBlock(language="python", code="print(\'Hello, World!\')"),\n            ]\n        )\n    )\n'})}),"\n",(0,o.jsx)(n.h3,{id:"remote",children:"Remote"}),"\n",(0,o.jsxs)(n.p,{children:["The\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/jupyter_code_executor",children:(0,o.jsx)(n.code,{children:"JupyterCodeExecutor"})}),"\ncan also connect to a remote Jupyter server. This is done by passing\nconnection information rather than an actual server object into the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/jupyter_code_executor",children:(0,o.jsx)(n.code,{children:"JupyterCodeExecutor"})}),"\nconstructor."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from autogen.coding.jupyter import JupyterCodeExecutor, JupyterConnectionInfo\n\nexecutor = JupyterCodeExecutor(\n    jupyter_server=JupyterConnectionInfo(host='example.com', use_https=True, port=7893, token='mytoken')\n)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"image-outputs",children:"Image outputs"}),"\n",(0,o.jsxs)(n.p,{children:["When Jupyter outputs an image, this is saved as a file into the\n",(0,o.jsx)(n.code,{children:"output_dir"})," of the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/jupyter_code_executor",children:(0,o.jsx)(n.code,{children:"JupyterCodeExecutor"})}),",\nas specified by the constructor. By default this is the current working\ndirectory."]}),"\n",(0,o.jsx)(n.h2,{id:"assigning-to-an-agent",children:"Assigning to an agent"}),"\n",(0,o.jsx)(n.p,{children:"A single server can support multiple agents, as each executor will\ncreate its own kernel. To assign an executor to an agent it can be done\nlike so:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from pathlib import Path\n\nfrom autogen import ConversableAgent\nfrom autogen.coding.jupyter import DockerJupyterServer, JupyterCodeExecutor\n\nserver = DockerJupyterServer()\n\noutput_dir = Path("coding")\noutput_dir.mkdir(exist_ok=True)\n\ncode_executor_agent = ConversableAgent(\n    name="code_executor_agent",\n    llm_config=False,\n    code_execution_config={\n        "executor": JupyterCodeExecutor(server, output_dir=output_dir),\n    },\n    human_input_mode="NEVER",\n)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["When using code execution it is critical that you update the system\nprompt of agents you expect to write code to be able to make use of the\nexecutor. For example, for the\n",(0,o.jsx)(n.a,{href:"../../../docs/reference/coding/jupyter/jupyter_code_executor",children:(0,o.jsx)(n.code,{children:"JupyterCodeExecutor"})}),"\nyou might setup a code writing agent like so:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# The code writer agent\'s system message is to instruct the LLM on how to\n# use the Jupyter code executor with IPython kernel.\ncode_writer_system_message = """\nYou have been given coding capability to solve tasks using Python code in a stateful IPython kernel.\nYou are responsible for writing the code, and the user is responsible for executing the code.\n\nWhen you write Python code, put the code in a markdown code block with the language set to Python.\nFor example:\n```python\nx = 3\n```\nYou can use the variable `x` in subsequent code blocks.\n```python\nprint(x)\n```\n\nWrite code incrementally and leverage the statefulness of the kernel to avoid repeating code.\nImport libraries in a separate code block.\nDefine a function or a class in a separate code block.\nRun code that produces output in a separate code block.\nRun code that involves expensive operations like download, upload, and call external APIs in a separate code block.\n\nWhen your code produces an output, the output will be returned to you.\nBecause you have limited conversation memory, if your code creates an image,\nthe output will be a path to the image instead of the image itself."""\n\nimport os\n\ncode_writer_agent = ConversableAgent(\n    "code_writer",\n    system_message=code_writer_system_message,\n    llm_config={"config_list": [{"model": "gpt-4", "api_key": os.environ["OPENAI_API_KEY"]}]},\n    code_execution_config=False,  # Turn off code execution for this agent.\n    max_consecutive_auto_reply=2,\n    human_input_mode="NEVER",\n)\n'})}),"\n",(0,o.jsx)(n.p,{children:"Then we can use these two agents to solve a problem:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import pprint\n\nchat_result = code_executor_agent.initiate_chat(\n    code_writer_agent, message="Write Python code to calculate the 14th Fibonacci number."\n)\n\npprint.pprint(chat_result)\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"code_executor_agent (to code_writer):\n\nWrite Python code to calculate the 14th Fibonacci number.\n\n--------------------------------------------------------------------------------\ncode_writer (to code_executor_agent):\n\nSure. The Fibonacci sequence is a series of numbers where the next number is found by adding up the two numbers before it. We know that the first two Fibonacci numbers are 0 and 1. After that, the series looks like:\n\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...\n\nSo, let's define a Python function to calculate the nth Fibonacci number.\n\n--------------------------------------------------------------------------------\ncode_executor_agent (to code_writer):\n\n\n\n--------------------------------------------------------------------------------\ncode_writer (to code_executor_agent):\n\nHere is the Python function to calculate the nth Fibonacci number:\n\n```python\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a+b\n        return b\n```\n\nNow, let's use this function to calculate the 14th Fibonacci number.\n\n```python\nfibonacci(14)\n```\n\n--------------------------------------------------------------------------------\ncode_executor_agent (to code_writer):\n\nexitcode: 0 (execution succeeded)\nCode output: \n377\n\n--------------------------------------------------------------------------------\nChatResult(chat_id=None,\n           chat_history=[{'content': 'Write Python code to calculate the 14th '\n                                     'Fibonacci number.',\n                          'role': 'assistant'},\n                         {'content': 'Sure. The Fibonacci sequence is a series '\n                                     'of numbers where the next number is '\n                                     'found by adding up the two numbers '\n                                     'before it. We know that the first two '\n                                     'Fibonacci numbers are 0 and 1. After '\n                                     'that, the series looks like:\\n'\n                                     '\\n'\n                                     '0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, '\n                                     '...\\n'\n                                     '\\n'\n                                     \"So, let's define a Python function to \"\n                                     'calculate the nth Fibonacci number.',\n                          'role': 'user'},\n                         {'content': '', 'role': 'assistant'},\n                         {'content': 'Here is the Python function to calculate '\n                                     'the nth Fibonacci number:\\n'\n                                     '\\n'\n                                     '```python\\n'\n                                     'def fibonacci(n):\\n'\n                                     '    if n <= 1:\\n'\n                                     '        return n\\n'\n                                     '    else:\\n'\n                                     '        a, b = 0, 1\\n'\n                                     '        for _ in range(2, n+1):\\n'\n                                     '            a, b = b, a+b\\n'\n                                     '        return b\\n'\n                                     '```\\n'\n                                     '\\n'\n                                     \"Now, let's use this function to \"\n                                     'calculate the 14th Fibonacci number.\\n'\n                                     '\\n'\n                                     '```python\\n'\n                                     'fibonacci(14)\\n'\n                                     '```',\n                          'role': 'user'},\n                         {'content': 'exitcode: 0 (execution succeeded)\\n'\n                                     'Code output: \\n'\n                                     '377',\n                          'role': 'assistant'}],\n           summary='exitcode: 0 (execution succeeded)\\nCode output: \\n377',\n           cost=({'gpt-4-0613': {'completion_tokens': 193,\n                                 'cost': 0.028499999999999998,\n                                 'prompt_tokens': 564,\n                                 'total_tokens': 757},\n                  'total_cost': 0.028499999999999998},\n                 {'gpt-4-0613': {'completion_tokens': 193,\n                                 'cost': 0.028499999999999998,\n                                 'prompt_tokens': 564,\n                                 'total_tokens': 757},\n                  'total_cost': 0.028499999999999998}),\n           human_input=[])\n"})}),"\n",(0,o.jsx)(n.p,{children:"Finally, stop the server. Or better yet use a context manager for it to\nbe stopped automatically."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"server.stop()\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>i});var o=t(67294);const r={},c=o.createContext(r);function i(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);